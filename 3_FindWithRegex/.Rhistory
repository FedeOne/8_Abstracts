" 7)  group characteristics related to ",freqRange2," ( for example: patients age, sex, country, or patients with: ", populationSuggestion , ")",
" If one information is not available, write NA and separate each answer with a semicolon ",
),
ifelse( isVS ==TRUE ,
paste0(
"Considering the text that follows:",
shortFullPhrase,
". QUESTIONS: ",
"1) Is ", freqVS1 ," related to a measure of prevalence or incidence? (possible answers: incidence, prevalence, no). if yes:",
" 2) Characteristic or exposure related to ",freqVS1 , " (for example:", exposureSuggestion , ");",
" 3) measure unit (percentage, per 100 persons/ year...);",
" 4) group characteristics ( for example: patients age, sex, or patients with", populationSuggestion , ")",
" 5) Characteristic related to ",freqVS2 , "% (for example:", exposureSuggestion , ");",
" 6) measure unit (percentage, per 100 persons/ year...);",
" 7)  group characteristics related to ",freqVS2," ( for example: patients age, sex, country, or patients with: ", populationSuggestion , ")",
" If one information is not available, write NA and separate each answer with a semicolon ",
),
paste0(
"Considering the text that follows:",
shortFullPhrase,
". QUESTIONS: ",
" 1) Is ", keyword, " related to a measure of incidence or prevalence? (possible answers: incidence, prevalence, no). If yes,",
"; 2) Which  caracteristic or exposure is linked to ", keyword , " (for example:", exposureSuggestion , ")",
"; 3) Which unit is related to ", keyword , " for ex.(percentage, per 100 persons/ year...)",
"; 4) ",keyword," is linked to a group best described by which carachteristics? for example: patients age, sex, or patients with: ", populationSuggestion , ")",
"; 5) confidence interval of the frequency measure [low, high] (if reported) ; "
) ) )
)
data3b <- data3 %>% ungroup() %>%
mutate(questionFullPhraseShort =
ifelse(freqIsRange2 == TRUE,
paste0(
"Considering the text that follows:",
shortFullPhrase,
". QUESTIONS: ",
"1) Is ", freqRange1 ," related to a measure of prevalence or incidence? (possible answers: incidence, prevalence, no). if yes:",
" 2) Characteristic or exposure related to ",freqRange1 , " (for example:", exposureSuggestion , ");",
" 3) measure unit (percentage, per 100 persons/ year...);",
" 4) group characteristics ( for example: patients age, sex, or patients with", populationSuggestion , ")",
" 5) Characteristic or exposure related to ",freqRange2 , "% (for example:", exposureSuggestion , ");",
" 6) measure unit (percentage, per 100 persons/ year...);",
" 7)  group characteristics related to ",freqRange2," ( for example: patients age, sex, country, or patients with: ", populationSuggestion , ")",
" If one information is not available, write NA and separate each answer with a semicolon ",
),
ifelse( isVS ==TRUE ,
paste0(
"Considering the text that follows:",
shortFullPhrase,
". QUESTIONS: ",
"1) Is ", freqVS1 ," related to a measure of prevalence or incidence? (possible answers: incidence, prevalence, no). if yes:",
" 2) Characteristic or exposure related to ",freqVS1 , " (for example:", exposureSuggestion , ");",
" 3) measure unit (percentage, per 100 persons/ year...);",
" 4) group characteristics ( for example: patients age, sex, or patients with", populationSuggestion , ")",
" 5) Characteristic related to ",freqVS2 , "% (for example:", exposureSuggestion , ");",
" 6) measure unit (percentage, per 100 persons/ year...);",
" 7)  group characteristics related to ",freqVS2," ( for example: patients age, sex, country, or patients with: ", populationSuggestion , ")",
" If one information is not available, write NA and separate each answer with a semicolon ",
),
paste0(
"Considering the text that follows:",
shortFullPhrase,
". QUESTIONS: ",
" 1) Is ", keyword, " related to a measure of incidence or prevalence? (possible answers: incidence, prevalence, no). If yes,",
"; 2) Which  caracteristic or exposure is linked to ", keyword , " (for example:", exposureSuggestion , ")",
"; 3) Which unit is related to ", keyword , " for ex.(percentage, per 100 persons/ year...)",
"; 4) ",keyword," is linked to a group best described by which carachteristics? for example: patients age, sex, or patients with: ", populationSuggestion , ")",
"; 5) confidence interval of the frequency measure [low, high] (if reported) ; "
) ) )
)
data3b <- data3 %>% ungroup() %>%
mutate(questionFullPhraseShort =
ifelse(freqIsRange2 == TRUE,
paste0(
"Considering the text that follows:",
shortFullPhrase,
". QUESTIONS: ",
"1) Is ", freqRange1 ," related to a measure of prevalence or incidence? (possible answers: incidence, prevalence, no). if yes:",
" 2) Characteristic or exposure related to ",freqRange1 , " (for example:", exposureSuggestion , ");",
" 3) measure unit (percentage, per 100 persons/ year...);",
" 4) group characteristics ( for example: patients age, sex, or patients with", populationSuggestion , ")",
" 5) Characteristic or exposure related to ",freqRange2 , "% (for example:", exposureSuggestion , ");",
" 6) measure unit (percentage, per 100 persons/ year...);",
" 7)  group characteristics related to ",freqRange2," ( for example: patients age, sex, country, or patients with: ", populationSuggestion , ")",
" If one information is not available, write NA and separate each answer with a semicolon "
),
ifelse( isVS ==TRUE ,
paste0(
"Considering the text that follows:",
shortFullPhrase,
". QUESTIONS: ",
"1) Is ", freqVS1 ," related to a measure of prevalence or incidence? (possible answers: incidence, prevalence, no). if yes:",
" 2) Characteristic or exposure related to ",freqVS1 , " (for example:", exposureSuggestion , ");",
" 3) measure unit (percentage, per 100 persons/ year...);",
" 4) group characteristics ( for example: patients age, sex, or patients with", populationSuggestion , ")",
" 5) Characteristic related to ",freqVS2 , "% (for example:", exposureSuggestion , ");",
" 6) measure unit (percentage, per 100 persons/ year...);",
" 7)  group characteristics related to ",freqVS2," ( for example: patients age, sex, country, or patients with: ", populationSuggestion , ")",
" If one information is not available, write NA and separate each answer with a semicolon "
),
paste0(
"Considering the text that follows:",
shortFullPhrase,
". QUESTIONS: ",
" 1) Is ", keyword, " related to a measure of incidence or prevalence? (possible answers: incidence, prevalence, no). If yes,",
"; 2) Which  caracteristic or exposure is linked to ", keyword , " (for example:", exposureSuggestion , ")",
"; 3) Which unit is related to ", keyword , " for ex.(percentage, per 100 persons/ year...)",
"; 4) ",keyword," is linked to a group best described by which carachteristics? for example: patients age, sex, or patients with: ", populationSuggestion , ")",
"; 5) confidence interval of the frequency measure [low, high] (if reported) ; "
) ) )
)
data4 <- data3b %>% group_by(PMID) %>%
mutate(docRank = seq(1,n())) %>% ungroup() %>%
mutate(doc_id = paste0(PMID, "_", docRank))
corp <- corpus(data4, text_field = "questionFullPhrase", docid_field = "doc_id")
corp2 <- corpus(data4, text_field = "questionFullAbstract", docid_field = "doc_id")
corp3 <- corpus(data4, text_field = "questionFullPhraseShort", docid_field = "doc_id")
data5 <- data4 %>%
mutate(nTokenfPhrase = ntoken(corp),
nTokenAbstract = ntoken(corp2),
nTokenShortFPhrase = ntoken(corp3),
)
## to compare which one consumes less tokensfor GPT
sum(data5$nTokenfPhrase)
sum(data5$nTokenAbstract)
sum(data5$nTokenShortFPhrase)
data3c <- data3b %>% ungroup() %>%
mutate(questionFullPhraseShortNoSuggest =
ifelse(freqIsRange2 == TRUE,
paste0(
"Considering the text that follows:",
shortFullPhrase,
". QUESTIONS: ",
"1) Is ", freqRange1 ," related to a measure of prevalence or incidence? (possible answers: incidence, prevalence, no). if yes:",
" 2) Characteristic or exposure related to ",freqRange1 ,
" 3) measure unit (percentage, per 100 persons/ year...);",
" 4) group characteristics ",
" 5) Characteristic or exposure related to ",freqRange2 , "%" ,
" 6) measure unit (percentage, per 100 persons/ year...);",
" 7)  group characteristics related to ",freqRange2,"%",
" If one information is not available, write NA and separate each answer with a semicolon "
),
ifelse( isVS ==TRUE ,
paste0(
"Considering the text that follows:",
shortFullPhrase,
". QUESTIONS: ",
"1) Is ", freqVS1 ," related to a measure of prevalence or incidence? (possible answers: incidence, prevalence, no). if yes:",
" 2) Characteristic or exposure related to ",freqVS1 ,
" 3) measure unit (percentage, per 100 persons/ year...);",
" 4) group characteristics",
" 5) Characteristic related to ",freqVS2 , "%",
" 6) measure unit (percentage, per 100 persons/ year...);",
" 7)  group characteristics related to ",freqVS2,"%",
" If one information is not available, write NA and separate each answer with a semicolon "
),
paste0(
"Considering the text that follows:",
shortFullPhrase,
". QUESTIONS: ",
" 1) Is ", keyword, " related to a measure of incidence or prevalence? (possible answers: incidence, prevalence, no). If yes,",
"; 2) Which  caracteristic or exposure is linked to ", keyword ,
"; 3) Which unit is related to ", keyword , " for ex.(percentage, per 100 persons/ year...)",
"; 4) ",keyword," is linked to a group best described by which carachteristics? ",
"; 5) confidence interval of the frequency measure [low, high] (if reported) ; "
) ) )
)
data4 <- data3c %>% group_by(PMID) %>%
mutate(docRank = seq(1,n())) %>% ungroup() %>%
mutate(doc_id = paste0(PMID, "_", docRank))
corp <- corpus(data4, text_field = "questionFullPhrase", docid_field = "doc_id")
corp2 <- corpus(data4, text_field = "questionFullAbstract", docid_field = "doc_id")
corp3 <- corpus(data4, text_field = "questionFullPhraseShort", docid_field = "doc_id")
corp4 <- corpus(data4, text_field = "questionFullPhraseShortNoSuggest", docid_field = "doc_id")
data5 <- data4 %>%
mutate(nTokenfPhrase = ntoken(corp),
nTokenAbstract = ntoken(corp2),
nTokenShortFPhrase = ntoken(corp3),
)
data5 <- data4 %>%
mutate(nTokenfPhrase = ntoken(corp),
nTokenAbstract = ntoken(corp2),
nTokenShortFPhrase = ntoken(corp3),
nTokenShortFPhraseNoSugg = ntoken(corp4),
)
## to compare which one consumes less tokensfor GPT
sum(data5$nTokenfPhrase)
sum(data5$nTokenAbstract)
sum(data5$nTokenShortFPhrase)
sum(data5$nTokenShortFPhraseNoSugg)
## lets check one by one in the open AI website
data6 <- data5 %>% arrange(doc_id) %>%
select(doc_id, PMID, TITLE, ABSTRACT,exposureSuggestion, populationSuggestion ,isVS,freqIsRange2,fullPhrase,keyword,questionFullPhrase , questionFullAbstract)
write.csv(data6, "questionsCKD3.csv")
## lets check one by one in the open AI website
data6 <- data5 %>% arrange(doc_id) %>%
select(doc_id, PMID, TITLE, ABSTRACT,exposureSuggestion, populationSuggestion ,isVS,freqIsRange2,fullPhrase,keyword,questionFullPhrase , questionFullAbstract,
questionFullPhraseShortNoSuggest)
write.csv(data6, "questionsCKD3.csv")
data3c <- data3b %>% ungroup() %>%
mutate(questionFullPhraseShortNoSuggest =
ifelse(freqIsRange2 == TRUE,
paste0(
"Considering the text that follows:",
shortFullPhrase,
". QUESTIONS: ",
"1) Is ", freqRange1 ," related to a measure of prevalence or incidence? (possible answers: incidence, prevalence, no). if yes:",
" 2) Characteristic or exposure related to ",freqRange1 ,
" 3) measure unit (percentage, per 100 persons/ year...);",
" 4) group characteristics ",
" 5) Characteristic or exposure related to ",freqRange2 , "%" ,
" 6) measure unit (percentage, per 100 persons/ year...);",
" 7)  group characteristics related to ",freqRange2,"%",
" If one information is not available, write NA and separate each answer with a semicolon. Answer as shortly as possible."
),
ifelse( isVS ==TRUE ,
paste0(
"Considering the text that follows:",
shortFullPhrase,
". QUESTIONS: ",
"1) Is ", freqVS1 ," related to a measure of prevalence or incidence? (possible answers: incidence, prevalence, no). if yes:",
" 2) Characteristic or exposure related to ",freqVS1 ,
" 3) measure unit (percentage, per 100 persons/ year...);",
" 4) group characteristics",
" 5) Characteristic related to ",freqVS2 , "%",
" 6) measure unit (percentage, per 100 persons/ year...);",
" 7)  group characteristics related to ",freqVS2,"%",
" If one information is not available, write NA and separate each answer with a semicolon. Answer as shortly as possible."
),
paste0(
"Considering the text that follows:",
shortFullPhrase,
". QUESTIONS: ",
" 1) Is ", keyword, " related to a measure of incidence or prevalence? (possible answers: incidence, prevalence, no). If yes,",
"; 2) Which  caracteristic or exposure is linked to ", keyword ,
"; 3) Which unit is related to ", keyword , " for ex.(percentage, per 100 persons/ year...)",
"; 4) ",keyword," is linked to a group best described by which carachteristics? ",
"; 5) confidence interval of the frequency measure [low, high] (if reported) ; ",
" If one information is not available, write NA and separate each answer with a semicolon. Answer as shortly as possible."
) ) )
)
data4 <- data3c %>% group_by(PMID) %>%
mutate(docRank = seq(1,n())) %>% ungroup() %>%
mutate(doc_id = paste0(PMID, "_", docRank))
corp <- corpus(data4, text_field = "questionFullPhrase", docid_field = "doc_id")
corp2 <- corpus(data4, text_field = "questionFullAbstract", docid_field = "doc_id")
corp3 <- corpus(data4, text_field = "questionFullPhraseShort", docid_field = "doc_id")
corp4 <- corpus(data4, text_field = "questionFullPhraseShortNoSuggest", docid_field = "doc_id")
data5 <- data4 %>%
mutate(nTokenfPhrase = ntoken(corp),
nTokenAbstract = ntoken(corp2),
nTokenShortFPhrase = ntoken(corp3),
nTokenShortFPhraseNoSugg = ntoken(corp4),
)
## to compare which one consumes less tokensfor GPT
sum(data5$nTokenfPhrase)
sum(data5$nTokenAbstract)
sum(data5$nTokenShortFPhrase)
sum(data5$nTokenShortFPhraseNoSugg)
## lets check one by one in the open AI website
data6 <- data5 %>% arrange(doc_id) %>%
select(doc_id, PMID, TITLE, ABSTRACT,exposureSuggestion, populationSuggestion ,isVS,freqIsRange2,fullPhrase,keyword,questionFullPhrase , questionFullAbstract,
questionFullPhraseShortNoSuggest)
write.csv(data6, "questionsCKD3.csv")
write.csv(data6, "questionsCKD3.csv")
dataB <- readRDS("C:/Users/Federico/Desktop/8_Abstracts/2_dataManageFromPmed/2a_Rdatabases/ckd_iron_full.rds")
setwd("C:/Users/Federico/Desktop/8_Abstracts/3_FindWithRegex")
library(quanteda)
library(dplyr)
library(tidyverse)
library(stringr)
library(readxl)
`%notin%` <- Negate(`%in%`)
### acronyms ####
data <- dataB %>% ### ok than we need to transform it to 4 variables like for authors, and from there we put in a regex with str_count we find the number of words to find.
group_by(PMID) %>%
mutate(ABSTRACT2 = ABSTRACT,
ABSTRACT2 = str_replace_all(ABSTRACT2, pattern = "-|/", replacement = " "),
ABSTRACT2 = str_remove_all(ABSTRACT2, pattern = "'"),
acronymsParent = str_extract_all(ABSTRACT2,"\\(\\s?[A-Z]+\\s?\\)"),
acro1 = acronymsParent [[1]][1],
acro2 = acronymsParent [[1]][2],
acro3 = acronymsParent [[1]][3],
acro4 = acronymsParent [[1]][4] ,
lengthacro1 = ifelse(is.na(acro1),0, str_count(str_remove_all(acro1, "\\(|\\)| " ) ) ),
lengthacro2 = ifelse(is.na(acro2),0, str_count(str_remove_all(acro2, "\\(|\\)| " ) ) ),
lengthacro3 = ifelse(is.na(acro3),0, str_count(str_remove_all(acro3, "\\(|\\)| " ) ) ),
lengthacro4 = ifelse(is.na(acro4),0, str_count(str_remove_all(acro4, "\\(|\\)| " ) ) ),
acroComp1 = str_extract(ABSTRACT2, paste0("(\\w+\\s+){0,",lengthacro1,"}\\(" ,acro1) ),
acroComp2 = str_extract(ABSTRACT2, paste0("(\\w+\\s+){0,",lengthacro2,"}\\(" ,acro2) ),
acroComp3 = str_extract(ABSTRACT2, paste0("(\\w+\\s+){0,",lengthacro3,"}\\(" ,acro3) ),
acroComp4 = str_extract(ABSTRACT2, paste0("(\\w+\\s+){0,",lengthacro4,"}\\(" ,acro4) ),
acroComp1 = tolower(str_remove(acroComp1, "\\(.*") ),
acroComp2 = tolower(str_remove(acroComp2, "\\(.*") ),
acroComp3 = tolower(str_remove(acroComp3, "\\(.*") ),
acroComp4 = tolower(str_remove(acroComp4, "\\(.*") ),
acroComp1 = str_trim(tolower(str_remove(acroComp1, "\\band\\b|\\bor\\b|\\bwith\\b|\\bin\\b|\\bof\\b|\\bfor\\b|\\ba\\b|\\bthat\\b|[1-9]") ) ),
acroComp2 = str_trim(tolower(str_remove(acroComp2, "\\band\\b|\\bor\\b|\\bwith\\b|\\bin\\b|\\bof\\b|\\bfor\\b|\\ba\\b|\\bthat\\b|[1-9]") ) ),
acroComp3 = str_trim(tolower(str_remove(acroComp3, "\\band\\b|\\bor\\b|\\bwith\\b|\\bin\\b|\\bof\\b|\\bfor\\b|\\ba\\b|\\bthat\\b|[1-9]") ) ),
acroComp4 = str_trim(tolower(str_remove(acroComp4, "\\band\\b|\\bor\\b|\\bwith\\b|\\bin\\b|\\bof\\b|\\bfor\\b|\\ba\\b|\\bthat\\b|[1-9]") ) )
)
# Paste STOP build ####
### to clean up the population
stop <- stopwords() %>% append(c("s","0", "the", "frequents?", "p", "vs","n", "relationship", "definitions?", "conclusions?"))
stop2 <- paste0("\\b",stop , "\\b")
pasteStop <- paste(stop2,collapse = '|' )
stopSymbol <- c("\\.",",", "\\;",
"\\(","\\)","\\[","\\]",
"%","\\<","\\>","\\±",
"\\=", "\\+","\\-","\\/"
)
stopSymbol2 <- paste0(stopSymbol, collapse = "|")
pasteStopSymbol <- paste0(pasteStop,"|", stopSymbol2)
### regex to remove numbers
regClean1 <- c("[:digit:]+", "'s", "\\d+")
regClean2 <-  paste0(regClean1, collapse = "|")
## 1. Title ####
### a. Title decomposition
### Title decomposition
library(tidytext)
titleExprDF2 <- data %>%  unnest_tokens(titleExpr, TITLE,
token = stringr::str_split, pattern = pasteStopSymbol) %>%
select(PMID, titleExpr) %>%
mutate(detectTitleExpr = str_detect(titleExpr, "^\\s*$")) %>%
filter(detectTitleExpr == "FALSE") %>%
group_by(PMID) %>%
mutate(titleExpr = str_trim(titleExpr),
eRank = seq(1,n()),
titExprRank = paste0("titExprRank",eRank))
titleExpressions <- titleExprDF2 %>%
pivot_wider(values_from = titleExpr,
names_from = titExprRank,
id_cols = PMID)
### a. Exposure from Title ####
exposureRegexPost <- c("(\\bassociations?\\b\\s+of\\s+((\\w+ ){1,4}))",
"(effects?\\s+of\\s+((\\w+ ){1,4}))",
"(predictives?\\s+values?\\s+of\\s+((\\w+ ){1,4}))",
"(impact\\s+of\\s+((\\w+ ){1,4}))",
"(use\\s+of\\s+((\\w+ ){1,4}))",
"(administration\\s+of\\s+((\\w+ ){1,4}))",
"(prognostic\\s+value\\s+of\\s+((\\w+ ){1,4}))",
"(impact\\s+of\\s+((\\w+ ){2,3}and\\s+(\\w+ ){1,4}))",
"(efficacy\\s+of\\s+((\\w+ ){1,4}))",
"(efficacy\\s+and\\s+safety\\s+of\\s+((\\w+ ){1,4}))",
"(\\bassociations?\\b\\s+between\\s+((\\w+ ){1,4}))", ### après il y a and et c'est l'outcome
"(relationships?\\b\\s+between\\s+((\\w+ ){1,4}))", ### après il y a and et c'est l'outcome
"(the\\s+\\brole?\\b\\s+of\\s+((\\w+ ){1,4}))")
exposureRegexPost6 <- c("(\\bassociations?\\b\\s+of\\s+((\\w+ ){6}))",
"(effects?\\s+of\\s+((\\w+ ){6}))",
"(predictives?\\s+values?\\s+of\\s+((\\w+ ){6}))",
"(impact\\s+of\\s+((\\w+ ){6}))",
"(use\\s+of\\s+((\\w+ ){6}))",
"(administration\\s+of\\s+((\\w+ ){6}))",
"(prognostic\\s+value\\s+of\\s+((\\w+ ){6}))",
"(impact\\s+of\\s+((\\w+ ){2,3}and\\s+(\\w+ ){3}))",
"(efficacy\\s+of\\s+((\\w+ ){6}))",
"(efficacy\\s+and\\s+safety\\s+of\\s+((\\w+ ){6}))",
"(the\\s+\\brole?\\b\\s+of\\s+((\\w+ ){6}))")
exposureRegexPre <- c("(\\w+\\s+){1,3}(?=(is|are) associated)",
"(\\w+\\s+){1,3}(?=(is|are) not associated)",
"(\\w+\\s+){1,3}(?=(is|are) related to)",
"(\\w+\\s+){1,3}(?=(is|are) not related to)",
"(\\w+\\s+){1,3}(?=associates?\\s+with)",
"(\\w+\\s+){1,4}(?=in\\sassociation\\swith\\s)",
"(\\w+\\s+){1,3}(?=and risk of)",
"(\\w+\\s+){1,4}(?=predicts?\\b)",
"(\\w+\\s+){1,4}(?=in relation to?\\b)",
"(\\w+\\s+){1,3}(?=correlate with)",
"(\\w+\\s+){1,3}(?=as a prognostic indicator for)",
"(\\w+\\s+){1,3}(?=are predictive biomarkers of)",
"(\\w+\\s+){1,3}(?=as an independent\\s+\\w+\\s+predictor)",
"((\\w+\\s+)|(\\w+\\.\\s+)){1,3}(?=(may be associated|may not be associated))", ## matches h. pylori
"(are\\s+|is\\s+)(\\w+\\s+){1,5}associated",
"(\\w+\\s+){1,4}(?=for\\sthe\\streatment\\sof)"
) ## are meat and heme iron intake associated with ?
exposureRegexPre6 <- c("(\\w+\\s+){1,6}(?=(is|are) associated)",
"(\\w+\\s+){1,6}(?=(is|are) not associated)",
"(\\w+\\s+){1,6}(?=(is|are) related to)",
"(\\w+\\s+){1,6}(?=(is|are) not related to)",
"(\\w+\\s+){1,3}(?=associates?\\s+with)",
"(\\w+\\s+){1,6}(?=and risk of)",
"(\\w+\\s+){1,6}(?=predicts?\\b)",
"(\\w+\\s+){1,6}(?=in\\sassociation\\swith\\s)",
"(\\w+\\s+){1,6}(?=in relation to?\\b)",
"(\\w+\\s+){1,6}(?=correlate with)",
"(\\w+\\s+){1,6}(?=as a prognostic indicator for)",
"(\\w+\\s+){1,6}(?=are predictive biomarkers of)",
"((\\w+\\s+)|(\\w+\\.\\s+)){1,6}(?=(may be associated|may not be associated))",
"(are\\s+|is\\s+)(\\w+\\s+){1,6}associated",
"(\\w+\\s+){1,6}(?=for\\sthe\\streatment\\sof)")
exposure <- data  %>%
select(PMID,TITLE) %>% group_by(PMID) %>% slice(1) %>% ungroup() %>%
mutate(TITLE = tolower(TITLE),
TITLE = str_remove_all(TITLE, ","),
TITLE = str_replace_all(TITLE, "-", replacement = " "),
exposureTitlePost2 = reduce(map(exposureRegexPost, str_extract, string = TITLE),`paste` ),
exposureTitlePost = ifelse(str_detect(exposureTitlePost2, "\\sand|and\\s")==TRUE,
reduce(map(exposureRegexPost6, str_extract, string = TITLE),`paste` ),exposureTitlePost2)
) %>%
mutate(exposureTitlePost = str_replace_all(exposureTitlePost, pattern = "NA\\s+|\\s+NA", replacement =""),
exposureTitlePost = str_remove_all(exposureTitlePost, "\\s+on\\s+.*|\\s+in\\s+.*|\\s+with\\s+.*|\\s+for\\s+.*|\\s+among\\s+.*|\\bto\\b|\\bvs\\b.*")) %>% ### remove after
mutate(exposureTitlePost = str_remove_all(exposureTitlePost, ".*\\s+of|.*\\s+between|\\bis\\b|\\bare\\b|\\bassociated\\b|\\bnot\\b|\\bcan\\b"),
exposureTitlePost = str_trim(exposureTitlePost)) %>%
mutate(exposureTitlePre2 = reduce(map(exposureRegexPre, str_extract, string = TITLE),`paste` ),
exposureTitlePre = ifelse(str_detect(exposureTitlePre2, "\\sand|and\\s")==TRUE,
reduce(map(exposureRegexPre6, str_extract, string = TITLE),`paste` ), exposureTitlePre2)
) %>% select(-c(exposureTitlePre2, exposureTitlePost2)) %>%
mutate(exposureTitlePre = str_replace_all(exposureTitlePre, pattern = "NA\\s+|\\s+NA", replacement =""),
exposureTitlePre = str_remove_all(exposureTitlePre, "\\s+on\\s+.*|\\s+in\\s+.*|\\s+with\\s+.*|\\s+for\\s+.*|\\s+among\\s+.*|\\bto\\b|\\bvs\\b.*")) %>% ### remove after
mutate(exposureTitlePre = str_remove_all(exposureTitlePre, ".*\\s+of|.*\\s+between|\\bis\\b|\\bare\\b|\\bassociated\\b|\\bnot\\b|\\bcan\\b"),
exposureTitlePre = str_trim(exposureTitlePre))
### b: Outcome from Title ####
### all connection words between exposure and outcome
findoutcome1 <- c("on", "with", "for", "with an increased risk for")
# find all possible combinations between exposures and the connection words and create the regex
regexOutcomePost <- crossing(exposure$exposureTitlePost, findoutcome1) %>%
rename("exposure" = 1) %>% filter(exposure!="") %>%
mutate(finalRegexPost = paste0(exposure,"\\s+",findoutcome1,"\\s+\\w+ \\w+ \\w+ \\w+"))
finalRegexPost <- regexOutcomePost$finalRegexPost
regexOutcomePost6 <- crossing(exposure$exposureTitlePost, findoutcome1) %>%
rename("exposure" = 1) %>% filter(exposure!="") %>%
mutate(finalRegexPost = paste0(exposure,"\\s+",findoutcome1,"\\s+\\w+ \\w+ \\w+ \\w+ \\w+ \\w+ \\w+ "))
finalRegexPost6 <- regexOutcomePost6$finalRegexPost
### also outcomes are generally mentioned after the exposure Regex pre
outcomeRegexPre2 <- c("((?<=associated?\\s(with\\s|to\\s))((\\w+\\s?){1,4}))",
"((?<=associates?\\s(with\\s|to\\s))((\\w+\\s?){1,4}))",
"((?<=(is|are)\\srelated\\s(with\\s|to\\s))((\\w+\\s?){1,4}))",
"((?<=(is|are)\\snot\\srelated\\s(with\\s|to\\s))((\\w+\\s?){1,4}))",
"((?<=and\\srisk\\sof\\s)((\\w+\\s?){1,4}))",
"((?<=predicts?\\b\\s)((\\w+\\s?){1,4}))",
"((?<=in\\srelation\\sto\\b\\s)((\\w+\\s?){1,4}))",
"((?<=correlated?\\s(with\\s|to\\s))((\\w+\\s?){1,4}))",
"((?<=correlates?\\s(with\\s|to\\s))((\\w+\\s?){1,4}))",
"((?<=prognostic\\sindicator\\sfor\\s)((\\w+\\s?){1,4}))",
"((?<=predictive\\sbiomarkers?\\sof\\s)((\\w+\\s?){1,4}))",
"((?<=predictive\\s(of\\s|for\\s))((\\w+\\s?){1,4}))",
"((?<=predictor\\s(of\\s|for\\s))((\\w+\\s?){1,4}))",
"((?<=predict\\sthe\\soutcome\\sof\\s)((\\w+\\s?){1,4}))",
"((?<=in\\sassociation\\swith\\s)((\\w+\\s?){1,4}))",
"((?<=for\\sthe\\streatment\\sof)((\\w+\\s?){1,4}))"
)
### apply all Regex combination to the TITLE string and clean it up
outcome <- exposure %>%
mutate(outcomeTitlePost2 = reduce(map(finalRegexPost, str_extract, string = TITLE),`paste` ),
outcomeTitlePost2 = str_replace_all(outcomeTitlePost2, pattern = "NA\\s+|\\s+NA", replacement =""),
outcomeTitlePost = ifelse(str_detect(outcomeTitlePost2, "\\sand|and\\s")==TRUE,
reduce(map(finalRegexPost6, str_extract, string = TITLE),`paste` ),outcomeTitlePost2),
outcomeTitlePost = str_replace_all(outcomeTitlePost, pattern = "NA\\s+|\\s+NA", replacement ="") ) %>%
select(-c(outcomeTitlePost2)) %>%
mutate(
### str remove all before words
outcomeTitlePost = str_remove(outcomeTitlePost, pattern = ".*(\\bfor\\b|\\bon\\b|\\bwith\\b)"),
### str remove all after words
outcomeTitlePost = str_remove(outcomeTitlePost, pattern = "(\\bin\\b).*")
)%>%
mutate(
outcomeTitlePre = reduce(map(outcomeRegexPre2, str_extract, string = TITLE),`paste` ),
outcomeTitlePre = str_replace_all(outcomeTitlePre, pattern = "NA\\s+|\\s+NA", replacement =""),
outcomeTitlePre = str_remove(outcomeTitlePre, pattern = "(\\bin\\b).*"))
### faut encore bien checker mais c'est pas mal
### c: population from Title ####
populationTitleRegex <- c("\\sin\\s)((\\w+\\s?){1,8}))")
population <- outcome %>% mutate(
exposureTitle = ifelse(!is.na(exposureTitlePost), exposureTitlePost, exposureTitlePre),
exposureTitle = str_remove(exposureTitle, pasteStopSymbol),
outcomeTitle = ifelse(!is.na(outcomeTitlePost), outcomeTitlePost, outcomeTitlePre),
exposureTitle = str_trim(exposureTitle),
outcomeTitle = str_trim(outcomeTitle)
) %>%
mutate(popTitleDynamicRegexExpo = paste0("((?<=",exposureTitle, populationTitleRegex),
popTitleDynamicRegexOutcome = paste0("((?<=",outcomeTitle, populationTitleRegex),
populationTitleExp = str_extract(TITLE, pattern = popTitleDynamicRegexExpo  ),
populationTitleOut = str_extract(TITLE, pattern = popTitleDynamicRegexOutcome  ),
populationTitle3 = str_extract(TITLE, "in\\s+patients\\s+with\\s+(\\w+(\\s+|\\.|\\:)){1,8}"),
populationTitleIn = str_extract(TITLE, "(?<=in ).{10,30}(\\.?|\\,?)"),
populationTitleIn = str_remove_all(populationTitleIn, pasteStopSymbol),
populationTitle = ifelse(!is.na(populationTitle3), populationTitle3,
ifelse(!is.na(populationTitleOut), populationTitleOut,
ifelse(!is.na(populationTitleExp), populationTitleExp,populationTitleIn)) )
)
finalTitleInfos <- population %>%
select(PMID, TITLE, exposureTitle, outcomeTitle,populationTitle) %>%
left_join(titleExpressions, by ="PMID")
finalTitleInfos[finalTitleInfos == "NA"] <- NA
## 2. Frequencies %, filtered sample ####
#### Extract the phrases mentioning prevalence or incidence with a window of 60 words around it
prevInc <- data %>%
filter(!is.na(PMID)) %>%
filter(
containsPrevalence == TRUE |
containsIncidence==TRUE) %>%
mutate(doc_id = as.character(PMID) ) %>%
filter(grepl("%", ABSTRACT)) %>%
arrange(PMID)
corp <- corpus(prevInc, text_field = "ABSTRACT", docid_field = "doc_id")
toks <- tokens(corp)
prevInc2 <- kwic(toks, pattern =   c(phrase("\\d+ %"),phrase("\\d+\\%") ),valuetype = "regex",
window = 60, case_insensitive = TRUE) %>%
rename("PMID"  = 1) %>% as.data.frame()
### create a full phrase with results and a ranked ID for each phrase inside a study
frequencies <- prevInc2 %>% mutate(
# pre = tolower(pre),
# post= tolower(post),
fullPhrase = paste(pre,keyword,post)) %>%
group_by(PMID) %>% arrange(PMID) %>%
mutate(IDRank = seq(1:length(PMID)),
IDletter = letters[IDRank],
doc_id = paste0(PMID,"_",IDRank) ) %>%  ## creating new ID cuz in corpus, doc_ID must be unique
mutate(shortPost = str_remove(post, "(?<!\\d)\\.(?!\\d).*?(?=(\\.\\d|\\.$|$))"),
shortPre = str_extract(pre, "(?<= \\.\\s?).[:alpha:].*"),
shortFullPhrase = paste(shortPre,keyword,shortPost)) %>%
mutate(ntokShort = ntoken(shortFullPhrase),
ntokLong = ntoken(fullPhrase))
